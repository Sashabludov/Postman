1) Методы HTTP (расписать по основным GET, POST, DELETE, PUT, PATCH):
GET- Метод GET запрашивает представление ресурса. Запросы с использованием этого метода могут только извлекать данные.
POST- используется для отправки сущностей к определённому ресурсу. Часто вызывает изменение состояния или какие-то побочные эффекты на сервере.
DELETE- удаляет указанный ресурс.
PUT- заменяет все текущие представления ресурса данными запроса.
PATCH- используется для частичного изменения ресурса.

2) Статус коды ответов сервера (до 6 каждого раздела- 400, 401, 402, 403, 404, 405):
400- Bad Request (Плохой запрос): Сервер не может обработать запрос из-за некорректного синтаксиса, неправильных параметров или других ошибок, связанных с запросом от клиента.
401- Unauthorized (Неавторизовано): Клиент не прошел аутентификацию или не предоставил необходимых учетных данных. Этот статус-код требует, чтобы клиент предоставил дополнительные данные для доступа к ресурсу.
402- Payment Required (Требуется оплата): Этот статус-код зарезервирован для будущего использования и предполагает, что клиент должен произвести оплату для получения доступа к запрашиваемому ресурсу.
403- Forbidden (Запрещено): Сервер понимает запрос клиента, но отказывает в доступе к ресурсу. Это может быть из-за ограничений прав доступа или других политик безопасности.
404- Not Found (Не найдено): Сервер не может найти запрашиваемый ресурс. Этот статус-код указывает, что запрашиваемый URL не существует на сервере.
405- Method Not Allowed (Метод не разрешен): Клиент использовал недопустимый HTTP-метод для запроса на ресурс, который не поддерживает этот метод. Например, попытка отправить POST-запрос на URL, который разрешает только GET-запросы.

3) Что такое Хост:
Хост - это устройство или компьютер, подключенный к сети и имеющий свой собственный IP-адрес. Хосты могут быть серверами, на которых хранятся данные и предоставляются услуги, или клиентскими компьютерами, которые получают доступ к ресурсам сети. В сетевых терминах хостом может быть также и виртуальная машина, работающая на физическом сервере.

4) Что такое Порт:
Порт - это числовой идентификатор, который определяет конкретный сетевой сервис или процесс, с которым устройство может взаимодействовать. 

5) Что такое IP:
IP: это протокол интернета, который определяет формат и адресацию пакетов данных, которые передаются по сети. IP является основным протоколом сетевого уровня в семействе протоколов TCP/IP, которое обеспечивает связь между устройствами в компьютерной сети.

6) URN, URL, URI:
URN- представляет уникальное имя ресурса 
URL- указывает местоположение ресурса в интернете
URI - общий термин, объединяющий оба понятия и представляющий идентификатор или адрес ресурса в Интернете.

7) Что такое Прокси сервер:
Прокси серверы используются для пересылки запросов и ответов между клиентом и сервером, а также для обеспечения различных функций, таких как фильтрация трафика, улучшение производительности, обеспечение анонимности и контроль доступа

8) Какие есть хедеры HTTP запросов и ответов:
запросы:
User-Agent: Содержит информацию о клиентском приложении или браузере, отправляющем запрос.
Host: Содержит доменное имя или IP-адрес сервера, к которому направлен запрос.
Content-Type: Определяет тип данных, содержащихся в теле запроса
Accept: Определяет типы данных, которые клиентский приложение или браузер может принять от сервера.
Authorization: Используется для передачи информации для аутентификации, например, токен доступа.

ответа:
Content-Type: Определяет тип данных, содержащихся в теле ответа от сервера 
Content-Length: Содержит длину тела ответа в байтах.
Cache-Control: Указывает, какие инструкции по кэшированию должны применяться при сохранении ответа.
Set-Cookie: Используется для установки куки (cookie) на стороне клиента.
Location: Используется для перенаправления клиента на новый URL.

9) (Со звёздочкой *) Что такое токен. Какие токены бывают в клиент серверной архитектуре:
В клиент-серверной архитектуре токен - это сущность, используемая для аутентификации и авторизации пользователей. Токен представляет собой небольшую строку, которая выдается клиенту сервером после успешной аутентификации. Клиент в последующих запросах передает этот токен серверу для подтверждения своей легитимности и получения доступа к защищенным ресурсам.


Токен доступа (Access Token): Это наиболее распространенный тип токена. Он выдается сервером после успешной аутентификации пользователя и используется для авторизации доступа к защищенным ресурсам на сервере. Токен доступа обычно имеет ограниченное время жизни.

Токен обновления (Refresh Token): Этот тип токена используется для получения нового токена доступа после истечения срока действия предыдущего токена доступа. Клиент обменивает токен обновления на новый токен доступа без необходимости повторной аутентификации.

Токен идентификации (Identity Token): Этот тип токена предоставляет информацию о самом пользователе, его идентификаторе и других атрибутах. Токен идентификации может быть использован для подтверждения личности пользователя.

Токен сеанса (Session Token): Токен сеанса обычно используется для отслеживания состояния сеанса между клиентом и сервером. Он помогает идентифицировать клиентский сеанс и поддерживать информацию о его активности.

Токен CSRF (Cross-Site Request Forgery): Этот тип токена используется для защиты от атак межсайтовой подделки запросов. Токен CSRF генерируется сервером и включается в каждый запрос клиента, чтобы убедиться, что запрос отправлен именно от авторизованного и ожидаемого клиента.
